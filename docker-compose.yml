version: '3.8'

services:
  app:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/conf.d:/usr/local/etc/php/conf.d
      - ./storage:/var/www/html/storage
    environment:
      - DB_HOST=db
      - DB_DATABASE=laravel_assessment
      - DB_USERNAME=laravel
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
    depends_on:
      - db
      - redis
    networks:
      - laravel

  nginx:
    image: nginx:1.23-alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - laravel

  db:
    image: mysql:8.0
    container_name: laravel_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel_assessment
      MYSQL_USER: laravel
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "3306:3306"
    networks:
      - laravel

  redis:
    image: redis:7-alpine
    container_name: laravel_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - laravel

  node:
    image: node:18-alpine
    container_name: laravel_node
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    entrypoint: ["tail", "-f", "/dev/null"]
    networks:
      - laravel

  mailhog:
    image: mailhog/mailhog:latest
    container_name: laravel_mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    networks:
      - laravel

volumes:
  db-data:
  redis-data:

networks:
  laravel:
    driver: bridge
